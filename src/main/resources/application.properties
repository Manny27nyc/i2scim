#
# Copyright (c) 2020.
#
# Confidential and Proprietary
#
# This unpublished source code may not be distributed outside
# “Independent Identity Org”. without express written permission of
# Phillip Hunt.
#
# People at companies that have signed necessary non-disclosure
# agreements may only distribute to others in the company that are
# bound by the same confidentiality agreement and distribution is
# subject to the terms of such agreement.
#

scim.mongodb.uri = mongodb://localhost:27017
scim.mongodb.dbname = SCIM
scim.resourcetype.path=classpath:/schema/resourceTypes.json
scim.json.pretty = true
scim.schema.path=classpath:/schema/scimSchema.json
logging.level.com.independentid.scim=INFO
scim.provider.bean=com.independentid.scim.backend.mongo.MongoProvider
scim.security.root.enable=true

quarkus.smallrye-jwt.enabled=true

smallrye.jwt.verify.key.location=/certs/jwks-certs.json
smallrye.jwt.always-check-authorization = true
mp.jwt.verify.issuer=http://10.1.10.109:8180/auth/realms/dev

quarkus.http.access-log.enabled=true
quarkus.http.access-log.log-to-file=true
quarkus.http.access-log.base-file-name=scim-access
quarkus.http.access-log.log-directory=/Users/pjdhunt/scim/logs

#DEVOPS and Monitoring
#quarkus.smallrye-metrics.path=
#quarkus.smallrye-metrics.extensions.enabled=true

quarkus.smallrye-metrics.path=/metrics
quarkus.smallrye-metrics.jaxrs.enabled=true

# Configure the SmallRye Kafka connector
kafka.bootstrap.servers=10.1.10.101:9092
quarkus.kafka-streams.topics=rep,set,test
quarkus.kafka-streams.application-id=i2scim
quarkus.application.name=i2stream

scim.event.enable=true

# Configure KafkaLogEventHandler
scim.kafkaLogEventHandler.enable=true
scim.kafkaLogEventHandler.pub.client.id=node1.log
scim.kafkaLogEventHandler.pub.topic=log
#scim.kafkaLogEventHandler.pub.acks=all
scim.kafkaLogEventHandler.pub.key.serializer=org.apache.kafka.common.serialization.StringSerializer
scim.kafkaLogEventHandler.pub.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configure KafkaRepEventHandler
scim.kafkaRepEventHandler.enable=false
scim.kafkaRepEventHandler.client.id=node1
# Configure outgoing publisher

scim.kafkaRepEventHandler.pub.transactional.id=node1
scim.kafkaRepEventHandler.pub.topic=rep
scim.kafkaRepEventHandler.pub.acks=all
scim.kafkaRepEventHandler.pub.enable.idempotence=true
scim.kafkaRepEventHandler.pub.key.serializer=org.apache.kafka.common.serialization.StringSerializer
scim.kafkaRepEventHandler.pub.value.serializer=com.independentid.scim.events.OperationSerializer

# Configure the KafkaRepEventHandler event receiver
scim.kafkaRepEventHandler.sub.group.id=cluster1
scim.kafkaRepEventHandler.sub.topics=rep
scim.kafkaRepEventHandler.sub.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
scim.kafkaRepEventHandler.sub.value.deserializer=com.independentid.scim.events.JsonKafkaDeserializer

#enable only for testing...
#scim.kafkaRepEventHandler.sub.auto.offset.reset=latest


#rest.security.enabled=true
#rest.security.api-matcher=/api/**
#rest.security.cors.allowed-origins=*
#rest.security.cors.allowed-headers=*
#rest.security.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
#rest.security.cors.max-age=3600
#rest.security.issuer-uri=http://10.1.10.109:8180/auth/realms/dev
#spring.security.oauth2.resource.id=scim-service-client
#security.oauth2.resource.token-info-uri=${rest.security.issuer-uri}/protocol/openid-connect/token/introspect
#security.oauth2.resource.user-info-uri=${rest.security.issuer-uri}/protocol/openid-connect/userinfo
#security.oauth2.resource.jwt.key-value=-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkppK2uRWqUYe9T0ukD6GoO+3NJMQQpgvPi7iOu/ATQOGyk4J45OL6BSHh7NtNCQrdVmwyk5DJQj6bnGbJ4g3IVPpdVnzien+nV2siSel7eTGkCPxnSWFimgWMjTzjWlbTQCqdzZf1gMwwSeIk5IF1hHDRq3NsC5+mR34a75TGjqCbF78Lz+xcS129wZjkqjGrVchbg86LvAknjLpZ8QSQKbo++tl1KqtRyY+5iV+hLmToINQnZaOtIyn+3uAQtyFx9ymT5rPC6b7OJIF0BtpdcidW/q40Edh26POxl5e0jH7wMgxbKgBuaYasP6QsY475Fb6pWegk5y0gLa+5zrlSQIDAQAB\n-----END PUBLIC KEY-----