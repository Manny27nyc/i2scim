apiVersion: v1
kind: ConfigMap
metadata:
  name: i2scim-configmap
  namespace: default
data:
  mp.jwt.verify.issuer: http://10.1.10.109:8180/auth/realms/dev
  quarkus.application.name: i2scim
  quarkus.container-image.builder: docker
  quarkus.container-image.group: independentid
  quarkus.container-image.name: i2scim
  quarkus.container-image.tag: "0.1"
  quarkus.http.access-log.base-file-name: scim-access
  quarkus.http.access-log.enabled: "true"
  quarkus.http.access-log.log-directory: /Users/pjdhunt/scim/logs
  quarkus.http.access-log.log-to-file: "true"
  quarkus.kubernetes-config.config-maps: i2scim
  quarkus.log.min-level: FINE
  quarkus.package.type: fast-jar
  quarkus.smallrye-jwt.enabled: "true"
  quarkus.smallrye-metrics.jaxrs.enabled: "true"
  quarkus.smallrye-metrics.path: /metrics
  scim.bulk.max.errors: "5"
  scim.bulk.max.ops: "1000"
  scim.coreSchema.path: classpath:/schema/scimCommonSchema.json
  scim.event.enable: "true"
  scim.json.pretty: "true"
  scim.kafka.log.bootstrap: localhost:9092
  scim.kafka.log.enable: "true"
  scim.kafka.log.pub.client.id: node1.log
  scim.kafka.log.pub.key.serializer: org.apache.kafka.common.serialization.StringSerializer
  scim.kafka.log.pub.topic: log
  scim.kafka.log.pub.value.serializer: org.apache.kafka.common.serialization.StringSerializer
  scim.kafka.rep.bootstrap: localhost:9092
  scim.kafka.rep.cache.filtered: "100"
  scim.kafka.rep.cache.processed: "100"
  scim.kafka.rep.client.id: node1
  scim.kafka.rep.cluster.id: cluster1
  scim.kafka.rep.enable: "false"
  scim.kafka.rep.pub.acks: all
  scim.kafka.rep.pub.enable.idempotence: "true"
  scim.kafka.rep.pub.key.serializer: org.apache.kafka.common.serialization.StringSerializer
  scim.kafka.rep.pub.topic: rep
  scim.kafka.rep.pub.transactional.id: ${scim.kafka.rep.client.id}
  scim.kafka.rep.pub.value.serializer: com.independentid.scim.events.OperationSerializer
  scim.kafka.rep.strategy: global
  scim.kafka.rep.sub.group.id: ${scim.kafka.rep.cluster.id}
  scim.kafka.rep.sub.key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
  scim.kafka.rep.sub.topics: rep
  scim.kafka.rep.sub.value.deserializer: com.independentid.scim.events.JsonKafkaDeserializer
  scim.prov.memory.backup.mins: "60"
  scim.prov.memory.maxbackups: "10"
  scim.prov.memory.persist.dir: ./scimdata
  scim.prov.memory.persist.file: scimdb.json
  scim.prov.mongo.dbname: SCIM
  scim.prov.mongo.indexes: User:userName,User:emails.value,Group:displayName
  scim.prov.mongo.uri: mongodb://localhost:27017
  scim.prov.persist.schema: "true"
  scim.prov.providerClass: com.independentid.scim.backend.mongo.MongoProvider
  scim.query.max.resultsize: "1000"
  scim.resourcetype.path: classpath:/schema/resourceTypes.json
  scim.schema.path: classpath:/schema/scimSchema.json
  scim.security.acis: /schema/acis.json
  scim.security.authen.basic: "false"
  scim.security.authen.jwt: "false"
  scim.security.authen.jwt.claim.scope: scope
  scim.security.enable: "true"
  scim.security.root.enable: "true"
  scim.security.root.password: admin
  scim.security.root.username: admin
  scim.thread.count: "5"
  smallrye.jwt.always-check-authorization: "true"
  smallrye.jwt.verify.key.location: /certs/jwks-certs.json

---

