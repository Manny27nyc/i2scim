[ {
  "schemas" : [ "urn:ietf:params:scim:schemas:core:2.0:Schema" ],
  "id" : "urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig",
  "name" : "Service Provider Configuration",
  "description" : "Schema for representing the service provider's configuration",
  "attributes" : [ {
    "name" : "authenticationSchemes",
    "type" : "complex",
    "description" : "A complex type that specifies supported Authentication Scheme properties.",
    "returned" : "default",
    "mutability" : "readOnly",
    "multiValued" : true,
    "required" : true,
    "subAttributes" : [ {
      "name" : "description",
      "type" : "string",
      "description" : "A description of the authentication scheme.",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : true
    }, {
      "name" : "documentationUri",
      "type" : "reference",
      "description" : "An HTTP addressable URL pointing to the Authentication Scheme's usage documentation.",
      "returned" : "default",
      "mutability" : "readOnly",
      "referenceTypes" : [ "external" ],
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "name",
      "type" : "string",
      "description" : "The common authentication scheme name; e.g., HTTP Basic.",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : true
    }, {
      "name" : "specUri",
      "type" : "reference",
      "description" : "An HTTP addressable URL pointing to the Authentication Scheme's specification.",
      "returned" : "default",
      "mutability" : "readOnly",
      "referenceTypes" : [ "external" ],
      "multiValued" : false,
      "required" : false
    } ]
  }, {
    "name" : "bulk",
    "type" : "complex",
    "description" : "A complex type that specifies BULK configuration options.",
    "returned" : "default",
    "mutability" : "readOnly",
    "multiValued" : false,
    "required" : true,
    "subAttributes" : [ {
      "name" : "maxOperations",
      "type" : "integer",
      "description" : "An integer value specifying the maximum number of operations.",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : false,
      "required" : true
    }, {
      "name" : "maxPayloadSize",
      "type" : "integer",
      "description" : "An integer value specifying the maximum payload size in bytes.",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : false,
      "required" : true
    }, {
      "name" : "supported",
      "type" : "boolean",
      "description" : "Boolean value specifying whether the operation is supported.",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : false,
      "required" : true
    } ]
  }, {
    "name" : "changePassword",
    "type" : "complex",
    "description" : "A complex type that specifies change password options.",
    "returned" : "default",
    "mutability" : "readOnly",
    "multiValued" : false,
    "required" : true,
    "subAttributes" : [ {
      "name" : "supported",
      "type" : "boolean",
      "description" : "Boolean value specifying whether the operation is supported.",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : false,
      "required" : true
    } ]
  }, {
    "name" : "documentationUri",
    "type" : "reference",
    "description" : "An HTTP addressable URL pointing to the service provider's human consumable help documentation.",
    "returned" : "default",
    "mutability" : "readOnly",
    "referenceTypes" : [ "external" ],
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "filter",
    "type" : "complex",
    "description" : "A complex type that specifies FILTER options.",
    "returned" : "default",
    "mutability" : "readOnly",
    "multiValued" : false,
    "required" : true,
    "subAttributes" : [ {
      "name" : "maxResults",
      "type" : "integer",
      "description" : "Integer value specifying the maximum number of resources returned in a response.",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : false,
      "required" : true
    }, {
      "name" : "supported",
      "type" : "boolean",
      "description" : "Boolean value specifying whether the operation is supported.",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : false,
      "required" : true
    } ]
  }, {
    "name" : "patch",
    "type" : "complex",
    "description" : "A complex type that specifies PATCH configuration options.",
    "returned" : "default",
    "mutability" : "readOnly",
    "multiValued" : false,
    "required" : true,
    "subAttributes" : [ {
      "name" : "supported",
      "type" : "boolean",
      "description" : "Boolean value specifying whether the operation is supported.",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : false,
      "required" : true
    } ]
  }, {
    "name" : "sort",
    "type" : "complex",
    "description" : "A complex type that specifies sort result options.",
    "returned" : "default",
    "mutability" : "readOnly",
    "multiValued" : false,
    "required" : true,
    "subAttributes" : [ {
      "name" : "supported",
      "type" : "boolean",
      "description" : "Boolean value specifying whether the operation is supported.",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : false,
      "required" : true
    } ]
  } ],
  "meta" : {
    "created" : "2021-06-27T11:48:46Z",
    "lastModified" : "2021-06-27T11:48:46Z",
    "resourceType" : "Schema",
    "location" : "/Schemas/urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig",
    "acis" : [ {
      "path" : "/Schemas",
      "name" : "Allow unauthenticated access to ServiceProviderConfig",
      "targetAttrs" : "*",
      "rights" : "read,search",
      "actors" : [ "any" ]
    }, {
      "path" : "/",
      "name" : "Self and employee access to read information",
      "targetFilter" : null,
      "targetAttrs" : "*,-password",
      "rights" : "read,search",
      "actors" : [ "self", "filter=null" ]
    }, {
      "path" : "/",
      "name" : "Administrators can read, search, compare all records and operational attributes",
      "targetAttrs" : "*,+",
      "rights" : "read,search",
      "actors" : [ "role=admin", "role=test" ]
    }, {
      "path" : "/",
      "name" : "Root can update all systems",
      "targetAttrs" : "*,+",
      "rights" : "add,modify,delete",
      "actors" : [ "role=admin", "role=test" ]
    } ]
  }
}, {
  "schemas" : [ "urn:ietf:params:scim:schemas:core:2.0:Schema" ],
  "id" : "urn:ietf:params:scim:schemas:core:2.0:ResourceType",
  "name" : "ResourceType",
  "description" : "Specifies the schema that describes a SCIM Resource Type",
  "attributes" : [ {
    "name" : "description",
    "type" : "string",
    "description" : "The resource type's human readable description. When applicable service providers MUST specify the description specified in the core schema specification.",
    "returned" : "default",
    "mutability" : "readOnly",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "endpoint",
    "type" : "reference",
    "description" : "The resource type's HTTP addressable endpoint relative to the Base URL; e.g., /Users",
    "returned" : "default",
    "mutability" : "readOnly",
    "referenceTypes" : [ "uri" ],
    "multiValued" : false,
    "required" : true
  }, {
    "name" : "id",
    "type" : "string",
    "description" : "The resource type's server unique id. May be the same as the 'name' attribute.",
    "returned" : "default",
    "mutability" : "readOnly",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "name",
    "type" : "string",
    "description" : "The resource type name. When applicable service providers MUST specify the name specified in the core schema specification; e.g., User",
    "returned" : "default",
    "mutability" : "readOnly",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : true
  }, {
    "name" : "schema",
    "type" : "reference",
    "description" : "The resource types primary/base schema URI",
    "returned" : "default",
    "mutability" : "readOnly",
    "referenceTypes" : [ "uri" ],
    "multiValued" : false,
    "required" : true
  }, {
    "name" : "schemaExtensions",
    "type" : "complex",
    "description" : "A list of URIs of the resource type's schema extensions",
    "returned" : "default",
    "mutability" : "readOnly",
    "multiValued" : false,
    "required" : true,
    "subAttributes" : [ {
      "name" : "required",
      "type" : "boolean",
      "description" : "A Boolean value that specifies whether the schema extension is required for the resource type. If true, a resource of this type MUST include this schema extension and include any attributes declared as required in this schema extension. If false, a resource of this type MAY omit this schema extension.",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : false,
      "required" : true
    }, {
      "name" : "schema",
      "type" : "reference",
      "description" : "The URI of a schema extension.",
      "returned" : "default",
      "mutability" : "readOnly",
      "referenceTypes" : [ "uri" ],
      "multiValued" : false,
      "required" : true
    } ]
  } ],
  "meta" : {
    "created" : "2021-06-27T11:48:46Z",
    "lastModified" : "2021-06-27T11:48:46Z",
    "resourceType" : "Schema",
    "location" : "/Schemas/urn:ietf:params:scim:schemas:core:2.0:ResourceType",
    "acis" : [ {
      "path" : "/Schemas",
      "name" : "Allow unauthenticated access to ServiceProviderConfig",
      "targetAttrs" : "*",
      "rights" : "read,search",
      "actors" : [ "any" ]
    }, {
      "path" : "/",
      "name" : "Self and employee access to read information",
      "targetFilter" : null,
      "targetAttrs" : "*,-password",
      "rights" : "read,search",
      "actors" : [ "self", "filter=null" ]
    }, {
      "path" : "/",
      "name" : "Administrators can read, search, compare all records and operational attributes",
      "targetAttrs" : "*,+",
      "rights" : "read,search",
      "actors" : [ "role=admin", "role=test" ]
    }, {
      "path" : "/",
      "name" : "Root can update all systems",
      "targetAttrs" : "*,+",
      "rights" : "add,modify,delete",
      "actors" : [ "role=admin", "role=test" ]
    } ]
  }
}, {
  "schemas" : [ "urn:ietf:params:scim:schemas:core:2.0:Schema" ],
  "id" : "urn:ietf:params:scim:schemas:core:2.0:Schema",
  "name" : "Schema",
  "description" : "Specifies the schema that describes a SCIM Schema",
  "attributes" : [ {
    "name" : "attributes",
    "type" : "complex",
    "description" : "A complex attribute that includes the attributes of a schema",
    "returned" : "default",
    "mutability" : "readOnly",
    "multiValued" : true,
    "required" : true,
    "subAttributes" : [ {
      "name" : "canonicalValues",
      "type" : "string",
      "description" : "A collection of canonical values.  When applicable service providers MUST specify the canonical types specified in the core schema specification; e.g., 'work', 'home'.",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : true,
      "uniqueness" : "none",
      "multiValued" : true,
      "required" : false
    }, {
      "name" : "caseExact",
      "type" : "boolean",
      "description" : "Indicates if a string attribute is case - sensitive.",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "description",
      "type" : "string",
      "description" : "A human readable description of the attribute.",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : true,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "multiValued",
      "type" : "boolean",
      "description" : "Boolean indicating an attribute's plurality.",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : false,
      "required" : true
    }, {
      "name" : "mutability",
      "type" : "string",
      "description" : "Indicates if an attribute is modifiable.",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : true,
      "uniqueness" : "none",
      "canonicalValues" : [ "readOnly", "readWrite", "immutable", "writeOnly" ],
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "name",
      "type" : "string",
      "description" : "The attribute's name",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : true,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : true
    }, {
      "name" : "referenceTypes",
      "type" : "string",
      "description" : "Used only with an attribute of type 'reference'. Specifies a SCIM resourceType that a reference attribute MAY refer to. E.g. User",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : true,
      "uniqueness" : "none",
      "multiValued" : true,
      "required" : false
    }, {
      "name" : "required",
      "type" : "boolean",
      "description" : "A boolean indicating if the attribute is required.",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "returned",
      "type" : "string",
      "description" : "Indicates when an attribute is returned in a response (e.g. to a query).",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : true,
      "uniqueness" : "none",
      "canonicalValues" : [ "always", "never", "default", "request" ],
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "subAttributes",
      "type" : "complex",
      "description" : "Used to define the sub-attributes of a complex attribute",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : true,
      "required" : false,
      "subAttributes" : [ {
        "name" : "canonicalValues",
        "type" : "string",
        "description" : "A collection of canonical values. When applicable service providers MUST specify the canonical types specified in the core schema specification; e.g., 'work', 'home'.",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : true,
        "uniqueness" : "none",
        "multiValued" : true,
        "required" : false
      }, {
        "name" : "caseExact",
        "type" : "boolean",
        "description" : "Indicates if a string attribute is case - sensitive.",
        "returned" : "default",
        "mutability" : "readOnly",
        "multiValued" : false,
        "required" : false
      }, {
        "name" : "description",
        "type" : "string",
        "description" : "A human readable description of the attribute.",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : true,
        "uniqueness" : "none",
        "multiValued" : false,
        "required" : false
      }, {
        "name" : "multiValued",
        "type" : "boolean",
        "description" : "Boolean indicating an attribute's plurality.",
        "returned" : "default",
        "mutability" : "readOnly",
        "multiValued" : false,
        "required" : true
      }, {
        "name" : "mutability",
        "type" : "string",
        "description" : "Indicates if an attribute is modifiable.",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : true,
        "uniqueness" : "none",
        "canonicalValues" : [ "readOnly", "readWrite", "immutable", "writeOnly" ],
        "multiValued" : false,
        "required" : false
      }, {
        "name" : "name",
        "type" : "string",
        "description" : "The attribute's name",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : true,
        "uniqueness" : "none",
        "multiValued" : false,
        "required" : true
      }, {
        "name" : "referenceTypes",
        "type" : "string",
        "description" : "Used only with an attribute of type 'reference'. Specifies a SCIM resourceType that a reference attribute MAY refer to. E.g. 'User'",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : true,
        "uniqueness" : "none",
        "multiValued" : true,
        "required" : false
      }, {
        "name" : "required",
        "type" : "boolean",
        "description" : "A boolean indicating if the attribute is required.",
        "returned" : "default",
        "mutability" : "readOnly",
        "multiValued" : false,
        "required" : false
      }, {
        "name" : "returned",
        "type" : "string",
        "description" : "Indicates when an attribute is returned in a response (e.g. to a query).",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : true,
        "uniqueness" : "none",
        "canonicalValues" : [ "always", "never", "default", "request" ],
        "multiValued" : false,
        "required" : false
      }, {
        "name" : "type",
        "type" : "string",
        "description" : "The attribute's data type. Valid values include: 'string', 'complex', 'boolean', 'decimal', 'integer', 'dateTime', 'reference'. ",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : false,
        "uniqueness" : "none",
        "canonicalValues" : [ "string", "complex", "boolean", "decimal", "integer", "dateTime", "reference" ],
        "multiValued" : false,
        "required" : true
      }, {
        "name" : "uniqueness",
        "type" : "string",
        "description" : "Indicates how unique a value must be.",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : true,
        "uniqueness" : "none",
        "canonicalValues" : [ "none", "server", "global" ],
        "multiValued" : false,
        "required" : false
      } ]
    }, {
      "name" : "type",
      "type" : "string",
      "description" : "The attribute's data type. Valid values include: 'string', 'complex', 'boolean', 'decimal', 'integer', 'dateTime', 'reference'. ",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : false,
      "uniqueness" : "none",
      "canonicalValues" : [ "string", "complex", "boolean", "decimal", "integer", "dateTime", "reference" ],
      "multiValued" : false,
      "required" : true
    }, {
      "name" : "uniqueness",
      "type" : "string",
      "description" : "Indicates how unique a value must be.",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : true,
      "uniqueness" : "none",
      "canonicalValues" : [ "none", "server", "global" ],
      "multiValued" : false,
      "required" : false
    } ]
  }, {
    "name" : "description",
    "type" : "string",
    "description" : "The schema's human readable name. When applicable service providers MUST specify the name specified in the core schema specification; e.g., User",
    "returned" : "default",
    "mutability" : "readOnly",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "id",
    "type" : "string",
    "description" : "The unique URI of the schema. When applicable service providers MUST specify the URI specified in the core schema specification",
    "returned" : "default",
    "mutability" : "readOnly",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : true
  }, {
    "name" : "name",
    "type" : "string",
    "description" : "The schema's human readable name. When applicable service providers MUST specify the name specified in the core schema specification; e.g., User",
    "returned" : "default",
    "mutability" : "readOnly",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : true
  } ],
  "meta" : {
    "created" : "2021-06-27T11:48:46Z",
    "lastModified" : "2021-06-27T11:48:46Z",
    "resourceType" : "Schema",
    "location" : "/Schemas/urn:ietf:params:scim:schemas:core:2.0:Schema",
    "acis" : [ {
      "path" : "/Schemas",
      "name" : "Allow unauthenticated access to ServiceProviderConfig",
      "targetAttrs" : "*",
      "rights" : "read,search",
      "actors" : [ "any" ]
    }, {
      "path" : "/",
      "name" : "Self and employee access to read information",
      "targetFilter" : null,
      "targetAttrs" : "*,-password",
      "rights" : "read,search",
      "actors" : [ "self", "filter=null" ]
    }, {
      "path" : "/",
      "name" : "Administrators can read, search, compare all records and operational attributes",
      "targetAttrs" : "*,+",
      "rights" : "read,search",
      "actors" : [ "role=admin", "role=test" ]
    }, {
      "path" : "/",
      "name" : "Root can update all systems",
      "targetAttrs" : "*,+",
      "rights" : "add,modify,delete",
      "actors" : [ "role=admin", "role=test" ]
    } ]
  }
}, {
  "schemas" : [ "urn:ietf:params:scim:schemas:core:2.0:Schema" ],
  "id" : "urn:ietf:params:scim:schemas:core:2.0:User",
  "name" : "User",
  "description" : "User Account",
  "attributes" : [ {
    "name" : "active",
    "type" : "boolean",
    "description" : "A Boolean value indicating the User's administrative status.",
    "returned" : "default",
    "mutability" : "readWrite",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "addresses",
    "type" : "complex",
    "description" : "A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.",
    "returned" : "default",
    "mutability" : "readWrite",
    "multiValued" : true,
    "required" : false,
    "subAttributes" : [ {
      "name" : "country",
      "type" : "string",
      "description" : "The country name component.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "formatted",
      "type" : "string",
      "description" : "The full mailing address, formatted for display or use with a mailing label. This attribute MAY contain newlines.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "locality",
      "type" : "string",
      "description" : "The city or locality component.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "postalCode",
      "type" : "string",
      "description" : "The zipcode or postal code component.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "region",
      "type" : "string",
      "description" : "The state or region component.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "streetAddress",
      "type" : "string",
      "description" : "The full street address component, which may include house number, street name, PO BOX, and multi-line extended street address information. This attribute MAY contain newlines.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "type",
      "type" : "string",
      "description" : "A label indicating the attribute's function; e.g., 'work' or 'home'.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "canonicalValues" : [ "work", "home", "other" ],
      "multiValued" : false,
      "required" : false
    } ]
  }, {
    "name" : "displayName",
    "type" : "string",
    "description" : "The name of the User, suitable for display to end-users. The name SHOULD be the full name of the User being described if known",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "emails",
    "type" : "complex",
    "description" : "E-mail addresses for the user. The value SHOULD be canonicalized by the Service Provider, e.g. bjensen@example.com instead of bjensen@EXAMPLE.COM. Canonical Type values of work, home, and other.",
    "returned" : "default",
    "mutability" : "readWrite",
    "multiValued" : true,
    "required" : false,
    "subAttributes" : [ {
      "name" : "display",
      "type" : "string",
      "description" : "A human readable name, primarily used for display purposes. READ-ONLY.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "primary",
      "type" : "boolean",
      "description" : "A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g. the preferred mailing address or primary e-mail address. The primary attribute value 'true' MUST appear no more than once.",
      "returned" : "default",
      "mutability" : "readWrite",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "type",
      "type" : "string",
      "description" : "A label indicating the attribute's function; e.g., 'work' or 'home'.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "canonicalValues" : [ "work", "home", "other" ],
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "value",
      "type" : "string",
      "description" : "E-mail addresses for the user. The value SHOULD be canonicalized by the Service Provider, e.g. bjensen@example.com instead of bjensen@EXAMPLE.COM. Canonical Type values of work, home, and other.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    } ]
  }, {
    "name" : "entitlements",
    "type" : "complex",
    "description" : "A list of entitlements for the User that represent a thing the User has.",
    "returned" : "default",
    "mutability" : "readWrite",
    "multiValued" : true,
    "required" : false,
    "subAttributes" : [ {
      "name" : "display",
      "type" : "string",
      "description" : "A human readable name, primarily used for display purposes. READ-ONLY.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "primary",
      "type" : "boolean",
      "description" : "A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.",
      "returned" : "default",
      "mutability" : "readWrite",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "type",
      "type" : "string",
      "description" : "A label indicating the attribute's function.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "value",
      "type" : "string",
      "description" : "The value of an entitlement.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    } ]
  }, {
    "name" : "groups",
    "type" : "complex",
    "description" : "A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated",
    "returned" : "default",
    "mutability" : "readOnly",
    "multiValued" : true,
    "required" : false,
    "subAttributes" : [ {
      "name" : "$ref",
      "type" : "reference",
      "description" : "The URI of the corresponding Group resource to which the user belongs",
      "returned" : "default",
      "mutability" : "readOnly",
      "referenceTypes" : [ "User", "Group" ],
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "display",
      "type" : "string",
      "description" : "A human readable name, primarily used for display purposes. READ-ONLY.",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "type",
      "type" : "string",
      "description" : "A label indicating the attribute's function; e.g., 'direct' or 'indirect'.",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : false,
      "uniqueness" : "none",
      "canonicalValues" : [ "direct", "indirect" ],
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "value",
      "type" : "string",
      "description" : "The identifier of the User's group.",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    } ]
  }, {
    "name" : "ims",
    "type" : "complex",
    "description" : "Instant messaging addresses for the User.",
    "returned" : "default",
    "mutability" : "readWrite",
    "multiValued" : true,
    "required" : false,
    "subAttributes" : [ {
      "name" : "display",
      "type" : "string",
      "description" : "A human readable name, primarily used for display purposes. READ-ONLY.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "primary",
      "type" : "boolean",
      "description" : "A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g. the preferred messenger or primary messenger. The primary attribute value 'true' MUST appear no more than once.",
      "returned" : "default",
      "mutability" : "readWrite",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "type",
      "type" : "string",
      "description" : "A label indicating the attribute's function; e.g., 'aim', 'gtalk', 'mobile' etc.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "canonicalValues" : [ "aim", "gtalk", "icq", "xmpp", "msn", "skype", "qq", "yahoo" ],
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "value",
      "type" : "string",
      "description" : "Instant messaging address for the User.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    } ]
  }, {
    "name" : "locale",
    "type" : "string",
    "description" : "Used to indicate the User's default location for purposes of localizing items such as currency, date time format, numerical representations, etc.",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "loginCnt",
    "type" : "integer",
    "description" : "Login counter. Used for filter test purposes for an Integer value",
    "returned" : "default",
    "mutability" : "readWrite",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "loginStrength",
    "type" : "decimal",
    "description" : "Login stength required. Used for filter test purposes for an Decimal value",
    "returned" : "default",
    "mutability" : "readWrite",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "name",
    "type" : "complex",
    "description" : "The components of the user's real name. Providers MAY return just the full name as a single string in the formatted sub-attribute, or they MAY return just the individual component attributes using the other sub-attributes, or they MAY return both. If both variants are returned, they SHOULD be describing the same name, with the formatted name indicating how the component attributes should be combined.",
    "returned" : "default",
    "mutability" : "readWrite",
    "multiValued" : false,
    "required" : false,
    "subAttributes" : [ {
      "name" : "familyName",
      "type" : "string",
      "description" : "The family name of the User, or Last Name in most Western languages (e.g. Jensen given the full name Ms. Barbara J Jensen, III.).",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "formatted",
      "type" : "string",
      "description" : "The full name, including all middle names, titles, and suffixes as appropriate, formatted for display (e.g. Ms. Barbara J Jensen, III.).",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "givenName",
      "type" : "string",
      "description" : "The given name of the User, or First Name in most Western languages (e.g. Barbara given the full name Ms. Barbara J Jensen, III.).",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "honorificPrefix",
      "type" : "string",
      "description" : "The honorific prefix(es) of the User, or Title in most Western languages (e.g. Ms. given the full name Ms. Barbara J Jensen, III.).",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "honorificSuffix",
      "type" : "string",
      "description" : "The honorific suffix(es) of the User, or Suffix in most Western languages (e.g. III. given the full name Ms. Barbara J Jensen, III.).",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "middleName",
      "type" : "string",
      "description" : "The middle name(s) of the User (e.g. Robert given the full name Ms. Barbara J Jensen, III.).",
      "returned" : "request",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    } ]
  }, {
    "name" : "nickName",
    "type" : "string",
    "description" : "The casual way to address the user in real life, e.g.'Bob' or 'Bobby' instead of 'Robert'. This attribute SHOULD NOT be used to represent a User's username (e.g. bjensen or mpepperidge)",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "password",
    "type" : "string",
    "description" : "The User's clear text password.  This attribute is intended to be used as a means to specify an initial password when creating a new User or to reset an existing User's password.",
    "returned" : "never",
    "mutability" : "writeOnly",
    "caseExact" : true,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "phoneNumbers",
    "type" : "complex",
    "description" : "Phone numbers for the User.  The value SHOULD be canonicalized by the Service Provider according to format in RFC3966 e.g. 'tel:+1-201-555-0123'.  Canonical Type values of work, home, mobile, fax, pager and other.",
    "returned" : "default",
    "mutability" : "readWrite",
    "multiValued" : true,
    "required" : false,
    "subAttributes" : [ {
      "name" : "display",
      "type" : "string",
      "description" : "A human readable name, primarily used for display purposes. READ-ONLY.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "primary",
      "type" : "boolean",
      "description" : "A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g. the preferred phone number or primary phone number. The primary attribute value 'true' MUST appear no more than once.",
      "returned" : "default",
      "mutability" : "readWrite",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "type",
      "type" : "string",
      "description" : "A label indicating the attribute's function; e.g., 'work' or 'home' or 'mobile' etc.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "canonicalValues" : [ "work", "home", "mobile", "fax", "pager", "other" ],
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "value",
      "type" : "string",
      "description" : "Phone number of the User",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    } ]
  }, {
    "name" : "photos",
    "type" : "complex",
    "description" : "URLs of photos of the User.",
    "returned" : "default",
    "mutability" : "readWrite",
    "multiValued" : true,
    "required" : false,
    "subAttributes" : [ {
      "name" : "display",
      "type" : "string",
      "description" : "A human readable name, primarily used for display purposes. READ-ONLY.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "primary",
      "type" : "boolean",
      "description" : "A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g. the preferred photo or thumbnail. The primary attribute value 'true' MUST appear no more than once.",
      "returned" : "default",
      "mutability" : "readWrite",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "type",
      "type" : "string",
      "description" : "A label indicating the attribute's function; e.g., 'photo' or 'thumbnail'.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "canonicalValues" : [ "photo", "thumbnail" ],
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "value",
      "type" : "reference",
      "description" : "URL of a photo of the User.",
      "returned" : "default",
      "mutability" : "readWrite",
      "referenceTypes" : [ "external" ],
      "multiValued" : false,
      "required" : false
    } ]
  }, {
    "name" : "preferredLanguage",
    "type" : "string",
    "description" : "Indicates the User's preferred written or spoken language.  Generally used for selecting a localized User interface. e.g., 'en_US' specifies the language English and country US.",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "profileUrl",
    "type" : "reference",
    "description" : "A fully qualified URL to a page representing the User's online profile",
    "returned" : "default",
    "mutability" : "readWrite",
    "referenceTypes" : [ "external" ],
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "roles",
    "type" : "complex",
    "description" : "A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.",
    "returned" : "default",
    "mutability" : "readWrite",
    "multiValued" : true,
    "required" : false,
    "subAttributes" : [ {
      "name" : "display",
      "type" : "string",
      "description" : "A human readable name, primarily used for display purposes. READ-ONLY.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "primary",
      "type" : "boolean",
      "description" : "A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.",
      "returned" : "default",
      "mutability" : "readWrite",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "type",
      "type" : "string",
      "description" : "A label indicating the attribute's function.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "value",
      "type" : "string",
      "description" : "The value of a role.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    } ]
  }, {
    "name" : "timezone",
    "type" : "string",
    "description" : "The User's time zone in the 'Olson' timezone database format; e.g.,'America/Los_Angeles'",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "title",
    "type" : "string",
    "description" : "The user's title, such as \"Vice President.\"",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "userName",
    "type" : "string",
    "description" : "Unique identifier for the User typically used by the user to directly authenticate to the service provider. Each User MUST include a non-empty userName value.  This identifier MUST be unique across the Service Consumer's entire set of Users.  REQUIRED",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : false,
    "uniqueness" : "server",
    "multiValued" : false,
    "required" : true
  }, {
    "name" : "userType",
    "type" : "string",
    "description" : "Used to identify the organization to user relationship. Typical values used might be 'Contractor', 'Employee', 'Intern', 'Temp', 'External', and 'Unknown' but any value may be used.",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "x509Certificates",
    "type" : "complex",
    "description" : "A list of certificates issued to the User.",
    "returned" : "default",
    "mutability" : "readWrite",
    "multiValued" : true,
    "required" : false,
    "subAttributes" : [ {
      "name" : "display",
      "type" : "string",
      "description" : "A human readable name, primarily used for display purposes. READ-ONLY.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "primary",
      "type" : "boolean",
      "description" : "A Boolean value indicating the 'primary' or preferred attribute value for this attribute. The primary attribute value 'true' MUST appear no more than once.",
      "returned" : "default",
      "mutability" : "readWrite",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "type",
      "type" : "string",
      "description" : "A label indicating the attribute's function.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "value",
      "type" : "binary",
      "description" : "The value of a X509 certificate.",
      "returned" : "default",
      "mutability" : "readWrite",
      "multiValued" : false,
      "required" : false
    } ]
  } ],
  "meta" : {
    "resourceType" : "Schema",
    "location" : "/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:User",
    "acis" : [ {
      "path" : "/",
      "name" : "Self and employee access to read information",
      "targetFilter" : null,
      "targetAttrs" : "*,-password",
      "rights" : "read,search",
      "actors" : [ "self", "filter=null" ]
    }, {
      "path" : "/",
      "name" : "Administrators can read, search, compare all records and operational attributes",
      "targetAttrs" : "*,+",
      "rights" : "read,search",
      "actors" : [ "role=admin", "role=test" ]
    }, {
      "path" : "/",
      "name" : "Root can update all systems",
      "targetAttrs" : "*,+",
      "rights" : "add,modify,delete",
      "actors" : [ "role=admin", "role=test" ]
    } ]
  }
}, {
  "schemas" : [ "urn:ietf:params:scim:schemas:core:2.0:Schema" ],
  "id" : "urn:ietf:params:scim:schemas:core:2.0:Group",
  "name" : "Group",
  "description" : "Group",
  "attributes" : [ {
    "name" : "displayName",
    "type" : "string",
    "description" : "Human readable name for the Group. REQUIRED.",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "members",
    "type" : "complex",
    "description" : "A list of members of the Group.",
    "returned" : "default",
    "mutability" : "readWrite",
    "multiValued" : true,
    "required" : false,
    "subAttributes" : [ {
      "name" : "$ref",
      "type" : "reference",
      "description" : "The URI of the corresponding to the member resource of this Group.",
      "returned" : "default",
      "mutability" : "immutable",
      "referenceTypes" : [ "User", "Group" ],
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "type",
      "type" : "string",
      "description" : "A label indicating the type of resource; e.g., 'User' or 'Group'.",
      "returned" : "default",
      "mutability" : "immutable",
      "caseExact" : false,
      "uniqueness" : "none",
      "canonicalValues" : [ "User", "Group" ],
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "value",
      "type" : "string",
      "description" : "Identifier of the member of this Group.",
      "returned" : "default",
      "mutability" : "immutable",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    } ]
  } ],
  "meta" : {
    "resourceType" : "Schema",
    "location" : "/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:Group",
    "acis" : [ {
      "path" : "/",
      "name" : "Self and employee access to read information",
      "targetFilter" : null,
      "targetAttrs" : "*,-password",
      "rights" : "read,search",
      "actors" : [ "self", "filter=null" ]
    }, {
      "path" : "/",
      "name" : "Administrators can read, search, compare all records and operational attributes",
      "targetAttrs" : "*,+",
      "rights" : "read,search",
      "actors" : [ "role=admin", "role=test" ]
    }, {
      "path" : "/",
      "name" : "Root can update all systems",
      "targetAttrs" : "*,+",
      "rights" : "add,modify,delete",
      "actors" : [ "role=admin", "role=test" ]
    } ]
  }
}, {
  "schemas" : [ "urn:ietf:params:scim:schemas:core:2.0:Schema" ],
  "id" : "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
  "name" : "EnterpriseUser",
  "description" : "Enterprise User",
  "attributes" : [ {
    "name" : "costCenter",
    "type" : "string",
    "description" : "Identifies the name of a cost center.",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "department",
    "type" : "string",
    "description" : "Identifies the name of a department.",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "division",
    "type" : "string",
    "description" : "Identifies the name of a division.",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "employeeNumber",
    "type" : "string",
    "description" : "Numeric or alphanumeric identifier assigned to a person, typically based on order of hire or association with an organization.",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "manager",
    "type" : "complex",
    "description" : "The User's manager. A complex type that optionally allows Service Providers to represent organizational hierarchy by referencing the 'id' attribute of another User.",
    "returned" : "default",
    "mutability" : "readWrite",
    "multiValued" : true,
    "required" : false,
    "subAttributes" : [ {
      "name" : "$ref",
      "type" : "reference",
      "description" : "The URI of the SCIM resource representing the User's manager.  REQUIRED.",
      "returned" : "default",
      "mutability" : "readWrite",
      "referenceTypes" : [ "User" ],
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "displayName",
      "type" : "string",
      "description" : "The displayName of the User's manager. OPTIONAL and READ-ONLY.",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    }, {
      "name" : "value",
      "type" : "string",
      "description" : "The id of the SCIM resource representing the User's  manager.  REQUIRED.",
      "returned" : "default",
      "mutability" : "readWrite",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    } ]
  }, {
    "name" : "organization",
    "type" : "string",
    "description" : "Identifies the name of an organization.",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  } ],
  "meta" : {
    "resourceType" : "Schema",
    "location" : "/v2/Schemas/urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
    "acis" : [ {
      "path" : "/",
      "name" : "Self and employee access to read information",
      "targetFilter" : null,
      "targetAttrs" : "*,-password",
      "rights" : "read,search",
      "actors" : [ "self", "filter=null" ]
    }, {
      "path" : "/",
      "name" : "Administrators can read, search, compare all records and operational attributes",
      "targetAttrs" : "*,+",
      "rights" : "read,search",
      "actors" : [ "role=admin", "role=test" ]
    }, {
      "path" : "/",
      "name" : "Root can update all systems",
      "targetAttrs" : "*,+",
      "rights" : "add,modify,delete",
      "actors" : [ "role=admin", "role=test" ]
    } ]
  }
}, {
  "schemas" : [ "urn:ietf:params:scim:schemas:core:2.0:Schema" ],
  "id" : "urn:ietf:params:scim:schemas:core:2.0:Common",
  "name" : "Common",
  "description" : "Schema defined here are applied across all SCIM objects and resource types in server",
  "attributes" : [ {
    "name" : "externalid",
    "type" : "string",
    "description" : "An externally referenceable identifier usable by clients.",
    "returned" : "default",
    "mutability" : "readWrite",
    "caseExact" : true,
    "uniqueness" : "server",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "id",
    "type" : "string",
    "description" : "The unique, permanent ID of the SCIM resource",
    "returned" : "always",
    "mutability" : "readOnly",
    "caseExact" : false,
    "uniqueness" : "server",
    "multiValued" : false,
    "required" : true
  }, {
    "name" : "meta",
    "type" : "complex",
    "description" : "The meta information about an object such as modification date etc.",
    "returned" : "default",
    "mutability" : "readOnly",
    "multiValued" : false,
    "required" : true,
    "subAttributes" : [ {
      "name" : "acis",
      "type" : "complex",
      "description" : "The ACIs that apply to the SCIM resource",
      "returned" : "request",
      "mutability" : "readOnly",
      "multiValued" : true,
      "required" : false,
      "subAttributes" : [ {
        "name" : "actors",
        "type" : "string",
        "description" : "Each value has one of: any, self, role, ref, filter whose parameter specified by = (e.g. role=root)",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : false,
        "multiValued" : true,
        "required" : false
      }, {
        "name" : "name",
        "type" : "string",
        "description" : "A descriptive name for the access control",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : true,
        "multiValued" : false,
        "required" : false
      }, {
        "name" : "path",
        "type" : "string",
        "description" : "The path where an ACI is applied",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : true,
        "multiValued" : false,
        "required" : true
      }, {
        "name" : "rights",
        "type" : "string",
        "description" : "A comma delimited list of rights. Must be one or more of: all, add, modify, delete, read, search",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : false,
        "multiValued" : false,
        "required" : false
      }, {
        "name" : "targetAttrs",
        "type" : "string",
        "description" : "A comma separated list of attributes the rule applies to. - means not allowed, * means all",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : false,
        "multiValued" : false,
        "required" : false
      }, {
        "name" : "targetFilter",
        "type" : "string",
        "description" : "A SCIM filter specifying resources for which the filter is applied to",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : false,
        "multiValued" : false,
        "required" : false
      } ]
    }, {
      "name" : "created",
      "type" : "datetime",
      "description" : "The date the object was created.",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : false,
      "required" : true
    }, {
      "name" : "lastModified",
      "type" : "datetime",
      "description" : "The date the object was created.",
      "returned" : "default",
      "mutability" : "readOnly",
      "multiValued" : false,
      "required" : true
    }, {
      "name" : "location",
      "type" : "reference",
      "description" : "The permanent externally referenceable URL to this object.",
      "returned" : "default",
      "mutability" : "readOnly",
      "referenceTypes" : [ "external" ],
      "multiValued" : false,
      "required" : true
    }, {
      "name" : "resourceType",
      "type" : "string",
      "description" : "The name of the ResourceType for the resource",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : true
    }, {
      "name" : "revisions",
      "type" : "complex",
      "description" : "Resource revision history",
      "returned" : "request",
      "mutability" : "readOnly",
      "multiValued" : true,
      "required" : false,
      "subAttributes" : [ {
        "name" : "date",
        "type" : "datetime",
        "description" : "The date of the modification",
        "returned" : "default",
        "mutability" : "readOnly",
        "multiValued" : false,
        "required" : true
      }, {
        "name" : "value",
        "type" : "string",
        "description" : "a unique transaction identifier",
        "returned" : "default",
        "mutability" : "readOnly",
        "caseExact" : true,
        "multiValued" : false,
        "required" : true
      } ]
    }, {
      "name" : "version",
      "type" : "string",
      "description" : "The current ETag version of the resource per (Section 2.3 of[RFC7232]).",
      "returned" : "default",
      "mutability" : "readOnly",
      "caseExact" : false,
      "uniqueness" : "none",
      "multiValued" : false,
      "required" : false
    } ]
  }, {
    "name" : "schemas",
    "type" : "string",
    "description" : "The schemas present in the SCIM resource",
    "returned" : "always",
    "mutability" : "immutable",
    "caseExact" : true,
    "multiValued" : true,
    "required" : true
  } ],
  "meta" : {
    "created" : "2021-06-27T11:48:46Z",
    "lastModified" : "2021-06-27T11:48:46Z",
    "resourceType" : "Schema",
    "location" : "/Schemas/urn:ietf:params:scim:schemas:core:2.0:Common",
    "acis" : [ {
      "path" : "/Schemas",
      "name" : "Allow unauthenticated access to ServiceProviderConfig",
      "targetAttrs" : "*",
      "rights" : "read,search",
      "actors" : [ "any" ]
    }, {
      "path" : "/",
      "name" : "Self and employee access to read information",
      "targetFilter" : null,
      "targetAttrs" : "*,-password",
      "rights" : "read,search",
      "actors" : [ "self", "filter=null" ]
    }, {
      "path" : "/",
      "name" : "Administrators can read, search, compare all records and operational attributes",
      "targetAttrs" : "*,+",
      "rights" : "read,search",
      "actors" : [ "role=admin", "role=test" ]
    }, {
      "path" : "/",
      "name" : "Root can update all systems",
      "targetAttrs" : "*,+",
      "rights" : "add,modify,delete",
      "actors" : [ "role=admin", "role=test" ]
    } ]
  }
}, {
  "schemas" : [ "urn:ietf:params:scim:schemas:core:2.0:Schema" ],
  "id" : "SyncRec",
  "name" : "Transaction Sync Record",
  "description" : "Records transactions processed in the current database",
  "attributes" : [ {
    "name" : "actor",
    "type" : "string",
    "description" : "The subject initiating the original request.",
    "returned" : "default",
    "mutability" : "immutable",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  }, {
    "name" : "date",
    "type" : "datetime",
    "description" : "The date the transaction was applied",
    "returned" : "default",
    "mutability" : "immutable",
    "multiValued" : false,
    "required" : true
  }, {
    "name" : "id",
    "type" : "string",
    "description" : "A unique transaction id (a UUID) for the create, modify or delete",
    "returned" : "default",
    "mutability" : "immutable",
    "caseExact" : true,
    "uniqueness" : "global",
    "multiValued" : false,
    "required" : true
  }, {
    "name" : "refs",
    "type" : "reference",
    "description" : "The resources affected",
    "returned" : "default",
    "mutability" : "immutable",
    "referenceTypes" : [ "uri" ],
    "multiValued" : true,
    "required" : false
  }, {
    "name" : "source",
    "type" : "string",
    "description" : "The client.id/group.id of the server originating the change.",
    "returned" : "default",
    "mutability" : "immutable",
    "caseExact" : false,
    "uniqueness" : "none",
    "multiValued" : false,
    "required" : false
  } ],
  "meta" : {
    "created" : "2021-06-27T11:48:46Z",
    "lastModified" : "2021-06-27T11:48:46Z",
    "resourceType" : "Schema",
    "location" : "/Schemas/SyncRec",
    "acis" : [ {
      "path" : "/Schemas",
      "name" : "Allow unauthenticated access to ServiceProviderConfig",
      "targetAttrs" : "*",
      "rights" : "read,search",
      "actors" : [ "any" ]
    }, {
      "path" : "/",
      "name" : "Self and employee access to read information",
      "targetFilter" : null,
      "targetAttrs" : "*,-password",
      "rights" : "read,search",
      "actors" : [ "self", "filter=null" ]
    }, {
      "path" : "/",
      "name" : "Administrators can read, search, compare all records and operational attributes",
      "targetAttrs" : "*,+",
      "rights" : "read,search",
      "actors" : [ "role=admin", "role=test" ]
    }, {
      "path" : "/",
      "name" : "Root can update all systems",
      "targetAttrs" : "*,+",
      "rights" : "add,modify,delete",
      "actors" : [ "role=admin", "role=test" ]
    } ]
  }
} ]