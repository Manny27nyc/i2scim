apiVersion: v1
kind: Service
metadata:
  name: i2scim-svc
  annotations:
    prometheus.io/port: "80"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
  labels:
    app.kubernetes.io/name: i2scim

spec:
  selector:
    app: i2scim
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
  externalIPs:
    - 192.168.1.104
    - 192.168.1.105
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: i2scim
spec:
  serviceName: i2scim-svc
  replicas: 2
  selector:
    matchLabels:
      app: i2scim
  template:
    metadata:
      labels:
        app: i2scim
    spec:
      containers:
        - name: i2scim
          imagePullPolicy: Always
          image: independentid/i2scim-mongo:0.5.0-Alpha
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 80
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 80
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          envFrom:
            - configMapRef:
                name: i2scim-mongo-config
          volumeMounts:
            - mountPath: /scim
              name: i2scim-pvc
      imagePullSecrets:
        - name: regcred
  volumeClaimTemplates:
    - metadata:
        name: i2scim-pvc
      spec:
        selector:
          matchLabels:
            app: i2scim
        storageClassName: nfs
        accessModes: [ ReadWriteMany ]
        resources:
          requests:
            storage: 1Gi
