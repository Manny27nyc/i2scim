#
# Copyright (c) 2020.
#
# Confidential and Proprietary
#
# This unpublished source code may not be distributed outside
# “Independent Identity Org”. without express written permission of
# Phillip Hunt.
#
# People at companies that have signed necessary non-disclosure
# agreements may only distribute to others in the company that are
# bound by the same confidentiality agreement and distribution is
# subject to the terms of such agreement.
#
#************************************************
# Configuration for Deploying i2scim with MongoDB
#************************************************

quarkus.application.name=i2scim

quarkus.kubernetes.namespace=scim-mongo
quarkus.container-image.group=independentid
quarkus.container-image.name=i2scim-mongo
quarkus.container-image.builder=docker
quarkus.container-image.tag=0.5.0-Alpha
quarkus.container-image.registry=docker.io
quarkus.kubernetes.service-type=NodePort
quarkus.kubernetes.deploy=false
quarkus.kubernetes.replicas=2
quarkus.kubernetes.env.secrets=mongo-db-cred,i2scim-root
quarkus.kubernetes.env.configmaps=i2scim-mongo-config

#quarkus.package.type=fast-jar

#scim.hostname = ${SCIM_SERVER_HOST}
#scim.clustername = SCIM_CLUSTER_1
#scim.server.port=8080
#scim.server.host=localhost
#scim.server.path=/scim

# Bootstrap Schema definitions
scim.resourcetype.path=classpath:/schema/resourceTypes.json
scim.schema.path=classpath:/schema/scimSchema.json
scim.coreSchema.path=classpath:/schema/scimCommonSchema.json

#SCIM features
scim.json.pretty=true
scim.query.max.resultsize=1000
scim.bulk.max.ops=1000
scim.bulk.max.errors=5

scim.thread.count=5

scim.root.dir=/scim

#Console log
quarkus.log.min-level=FINE
#quarkus.log.category."com.independentid.scim".min-level=DEBUG

# HTTP Logging
quarkus.http.access-log.enabled=true
quarkus.http.access-log.log-to-file=true
quarkus.http.access-log.base-file-name=scim-access
quarkus.http.access-log.log-directory=${scim.root.dir}/logs

# Provider Config
#Provider selection e.g. one of...
#  - com.independentid.scim.backend.mongo.MongoProvider
#  - com.independentid.scim.backend.memory.MemoryProvider
scim.prov.providerClass=com.independentid.scim.backend.mongo.MongoProvider
scim.prov.persist.schema=true

#SCIM MongoProvider Config
scim.prov.mongo.uri=mongodb://localhost:27017
scim.prov.mongo.dbname=SCIM

# Ideally use a kubernetes secret to pass these values...
#scim.prov.mongo.username=admin
#scim.prov.mongo.password=changeit!
#quarkus.kubernetes.env.mapping.scim-prov-mongo-username.from-secret=mongo-db-cred
#quarkus.kubernetes.env.mapping.scim-prov-mongo-username.with-key=username
#quarkus.kubernetes.env.mapping."scim.prov.mongo.password".from-secret=mongo-db-cred
#quarkus.kubernetes.env.mapping."scim.prov.mongo.password".with-key=password

scim.prov.mongo.indexes=User:userName,User:emails.value,Group:displayName

#Quarkus Mongo Security Extensions
# Configures the authentication mechanism to use if a credential was supplied. The default is unspecified, in which
# case the client will pick the most secure mechanism available based on the sever version. For the GSSAPI and
# MONGODB-X509 mechanisms, no password is accepted, only the username.
#Auth-mechanism = MONGO_CR | GSSAPI | PLAIN | MONGODB-X509
quarkus.mongodb.credentials.auth-mechanism=PLAIN
# Configures the source of the authentication credentials. This is typically the database that the credentials have
# been created. The value defaults to the database specified in the path portion of the connection string or in the
# 'database' configuration property.. If the database is specified in neither place, the default value is admin. This
# option is only respected when using the MONGO-CR mechanism (the default).
quarkus.mongodb.credentials.auth-source=admin

# Allows passing of authentication mechanism properties
# quarkus.mongodb.credentials.auth-mechanism-properties

# Configures the source of the authentication credentials. This is typically the database that the credentials have
# been created. The value defaults to the database specified in the path portion of the connection string or in the
# 'database' configuration property.. If the database is specified in neither place, the default value is admin. This
# option is only respected when using the MONGO-CR mechanism (the default).
# quarkus.mongodb.credentials.auth-source


#SCIM Access Control
scim.security.enable=true
scim.security.acis=/schema/acis.json
scim.security.root.enable=true
#quarkus.kubernetes.env.mapping."scim.security.root.username".from-secret=scim-root
#quarkus.kubernetes.env.mapping."scim.security.root.username".with-key=username
#quarkus.kubernetes.env.mapping."scim.security.root.password".from-secret=scim-root
#quarkus.kubernetes.env.mapping."scim.security.root.password".with-key=password
#scim.security.root.username=admin
#scim.security.root.password=admin

# Basic Authentication
scim.security.authen.basic=true

# Bearer Authentication
scim.security.authen.jwt=true
scim.security.authen.jwt.claim.scope=scope

quarkus.smallrye-jwt.enabled=true

smallrye.jwt.verify.key.location=/certs/jwks-certs.json
smallrye.jwt.always-check-authorization=true
mp.jwt.verify.issuer=http://10.1.10.109:8180/auth/realms/dev



#DEVOPS and Monitoring
#quarkus.smallrye-metrics.path=
#quarkus.smallrye-metrics.extensions.enabled=true

quarkus.smallrye-metrics.path=/metrics
quarkus.smallrye-metrics.jaxrs.enabled=true



# SCIM Event Handling and Replication (must be enabled to run kafka components)
scim.event.enable=false

